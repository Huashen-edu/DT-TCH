<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="tch">

	<select id="getStudentInfo" resultType="com.digital.tch.china.vo.User"
		parameterType="com.digital.tch.china.vo.User">
		SELECT *
		FROM t_user
		WHERE user_id = (
		SELECT b.user_id
		FROM t_user
		a,t_student_parents b
		WHERE a.user_id=#{user_id} AND
		a.user_id =
		b.parent_id )
	</select>

	<select id="getUserInfo" resultType="com.digital.tch.china.vo.User"
		parameterType="com.digital.tch.china.vo.User">
		SELECT
		*
		FROM v_pcm_userinfo
		WHERE user_id =
		BINARY(#{user_id})
	</select>

	<select id="getNoticeList" resultType="com.digital.tch.china.vo.Notice"
		parameterType="com.digital.tch.china.vo.SearchCondition">

		SELECT (select code_name from t_code where
		code_id=a.speaker and
		code_group=23 ) as
		speaker,a.*,ifnull(C.nread_id,0) as new_cnt
		FROM
		t_notice a left join
		t_notice_read C on ( a.nid = C.nid and
		C.user_id=#{user_id}),t_user b
		WHERE a.scid=b.scid AND ( a.target like
		'%S%' or a.target like '%P%' )
		AND b.user_id=#{user_id}
		ORDER BY a.reg_date desc
		LIMIT
		#{currentPage},#{recordCnt}
	</select>

	<select id="getNoticeFileList" resultType="com.digital.tch.china.vo.NoticeFile"
		parameterType="com.digital.tch.china.vo.Notice">

		SELECT *
		FROM t_notice_file
		WHERE nid = #{nid}
	</select>

	<select id="getAlarmList" resultType="com.digital.tch.china.vo.Alarm"
		parameterType="com.digital.tch.china.vo.SearchCondition">

		SELECT
		a.aid,a.title,a.user_id,a.reg_date,ifnull(C.aid,0) as
		new_cnt,e.subject,
		IFNULL((select code_name from t_code where
		code_group='02' and code_id=e.subject),'班主任') as
		subject_name,d.user_name
		FROM t_alarm a left join t_alarm_read C on (
		a.aid = C.aid and C.user_id=#{user_id} ) ,t_alarm_students b,
		(
		SELECT
		b.user_id,a.reg_date
		FROM t_user a,t_student_parents b
		WHERE
		a.user_id=#{user_id} AND a.user_id = b.parent_id ) m,t_user
		d,t_alarm_class e
		WHERE a.aid =b.aid AND b.user_id=m.user_id
		AND
		a.aid=e.aid
		AND a.user_id = d.user_id AND a.is_delete='N' and
		a.reg_date > m.reg_date
		ORDER BY a.reg_date desc

		LIMIT
		#{currentPage},#{recordCnt}
	</select>

	<select id="getAlarmInfo" resultType="com.digital.tch.china.vo.Alarm"
		parameterType="com.digital.tch.china.vo.Alarm">
		SELECT a.*,d.user_name
		FROM t_alarm a,t_user d
		WHERE a.aid
		= #{aid} and a.user_id = d.user_id
		and d.is_delete='N'
	</select>

	<select id="getAlarmFileList" resultType="com.digital.tch.china.vo.AlarmFile"
		parameterType="com.digital.tch.china.vo.Alarm">

		SELECT *
		FROM t_alarm_file
		WHERE aid = #{aid}
	</select>

	<insert id="insertNoticeRead" parameterType="com.digital.tch.china.vo.SearchCondition">
		INSERT INTO
		t_notice_read ( nid,user_id )
		VALUES(
		#{key},#{user_id})
	</insert>

	<insert id="insertAlarmRead" parameterType="com.digital.tch.china.vo.SearchCondition">
		INSERT INTO
		t_alarm_read ( aid,user_id )
		VALUES(
		#{key},#{user_id})
	</insert>

	<insert id="insertParentQaRead" parameterType="com.digital.tch.china.vo.SearchCondition">
		INSERT INTO
		t_parent_qa_read ( pqaid,user_id )
		VALUES(
		#{key},#{user_id})
	</insert>

	<select id="getAccessToken" resultType="com.digital.tch.china.vo.AccessToken">
		SELECT *
		FROM
		t_weixin_access_token
		LIMIT 1
	</select>

	<insert id="insertAccessToken" parameterType="com.digital.tch.china.vo.AccessToken">
		INSERT INTO
		t_weixin_access_token (
		access_token,expires_in,up_date )
		VALUES(
		#{access_token},#{expires_in},now())
	</insert>

	<update id="updateAccessToken" parameterType="com.digital.tch.china.vo.AccessToken">
		UPDATE
		t_weixin_access_token SET
		access_token
		=#{access_token},expires_in
		=#{expires_in},up_date=now()
	</update>

	<select id="getWXUserInfo" resultType="com.digital.tch.china.vo.WXUserInfo"
		parameterType="com.digital.tch.china.vo.WXUserInfo">
		SELECT *
		FROM t_weixin_user
		WHERE wx_user_id =
		#{wx_user_id}
		LIMIT 1
	</select>

	<select id="getTeacherSubjectList" resultType="java.util.HashMap"
		parameterType="java.util.HashMap">
		SELECT
		code_id AS subject_id
		,code_name AS subject_name
		,duty_school_year AS school_year
		FROM t_teacher_duty AS duty
		JOIN t_code
		AS code ON
		code.code_id = duty.duty_subject
		JOIN t_user AS userInfo ON (
		userInfo.user_id = duty.user_id
		AND userInfo.is_delete="N"
		AND
		userInfo.scid = #{scid}
		)
		WHERE 1=1
		AND (code_group="02" OR
		code_group="61")
		AND duty.user_id =
		#{user_id}

		<if test="subject_id != null">
			AND duty.duty_subject = #{subject_id}
		</if>
		<if test="school_year != null">
			AND duty.duty_school_year = #{school_year}
		</if>
		<if test="(school_year == null) and (subject_id == null)">
			GROUP BY duty.duty_subject,duty_school_year
		</if>

	</select>

	<select id="getTeacherDutySchoolYear" resultType="java.util.HashMap"
		parameterType="java.util.HashMap">
		SELECT
		duty_school_year AS school_year
		FROM t_teacher_duty
		AS duty
		JOIN t_code AS code ON
		code.code_id = duty.duty_subject
		JOIN
		t_user AS userInfo ON (
		userInfo.user_id = duty.user_id
		AND
		userInfo.is_delete= 'N'
		AND userInfo.user_type = 'T'
		AND userInfo.scid =
		#{scid}
		)
		WHERE 1=1
		AND (code_group="02" OR code_group="61")
		AND
		duty.user_id =
		#{user_id}
		GROUP BY duty.duty_school_year
	</select>

	<insert id="insertAuthorize" parameterType="com.digital.tch.china.vo.WXUserInfo">
		INSERT INTO
		t_weixin_user (
		user_id,user_type,wx_user_id,device_id,ins_date,is_used )
		VALUES(
		#{user_id},#{user_type},#{wx_user_id},#{device_id},now(),'Y')
	</insert>

	<update id="updateAuthorize" parameterType="com.digital.tch.china.vo.WXUserInfo">
		UPDATE t_weixin_user
		SET
		user_id
		=#{user_id},user_type
		=#{user_type},device_id
		=#{device_id},is_used='Y',up_date=now()
		WHERE
		wx_user_id =
		#{wx_user_id}
	</update>

	<update id="updateAuthorizeT" parameterType="com.digital.tch.china.vo.WXUserInfo">
		UPDATE t_weixin_user
		SET
		is_used
		='N',up_date=now()
		WHERE
		user_id =
		#{user_id}
	</update>

	<select id="getNoticeInfo" resultType="com.digital.tch.china.vo.Notice"
		parameterType="com.digital.tch.china.vo.SearchCondition">
		SELECT (select code_name from t_code where
		code_id=a.speaker and code_group=23 ) as speaker,a.*
		FROM t_notice a
		WHERE nid = #{nid}
	</select>

	<select id="getAlarmListBySubjectTeacher" resultType="com.digital.tch.china.vo.Alarm"
		parameterType="java.util.HashMap">
		SELECT
		alarm.aid
		,alarm.user_id
		,alarm.title
		,alarm.reg_date
		,alarmClass.acid
		,alarmClass.school_year AS target_school_year
		,alarmClass.class_no AS target_class_no
		,alarmClass.subject AS
		subject_id
		,userInfo.school_year
		,userInfo.class_no
		,userInfo.user_name
		,IFNULL(codeInfo.code_name,"") AS subject_name
		,CONCAT('[',GROUP_CONCAT('"',alarmClass.school_year,'-',alarmClass.class_no,'"')
		,']') AS targetClass
		,IF((SELECT COUNT(afid) FROM t_alarm_file WHERE
		aid = alarm.aid ) = 0 ,
		"false","true") as isFile
		,ifnull(tar.aid,0) AS
		new_cnt
		FROM t_alarm AS alarm
		INNER JOIN t_user AS userInfo ON
		userInfo.user_id =
		alarm.user_id
		LEFT JOIN t_alarm_class as alarmClass
		ON alarmClass.aid = alarm.aid
		LEFT JOIN t_code AS codeInfo ON
		(codeInfo.code_group = '02' AND
		alarmClass.subject = codeInfo.code_id)
		LEFT JOIN t_alarm_read AS tar ON
		tar.aid = alarmClass.aid
		WHERE 1=1
		AND
		alarm.is_delete = 'N'
		AND
		userInfo.scid = #{scid}
		AND alarm.user_id =
		#{user_id}
		<if test='search_key == "title"'>
			AND alarm.title LIKE CONCAT('%', #{search_word}, '%')
		</if>
		<if test="school_year != null">
			AND alarmClass.school_year = #{school_year}
		</if>
		<!-- <choose>
			<when test='subject_id == "00"'>
				AND alarmClass.subject = "00"
			</when>
			<when test='subject_id == null'>
				AND alarmClass.subject != "00"
			</when>
			<otherwise>
				AND alarmClass.subject != "00"
				AND alarmClass.subject =
				#{subject_id}
			</otherwise>
		</choose> -->
		<if test="search_word != null">
			AND(
			1=1
			<choose>
				<when test='search_key == "title"'>
					AND alarm.title LIKE CONCAT('%', #{search_word},
					'%')
				</when>
				<when test='search_key == "class"'>
					AND alarmClass.class_no LIKE CONCAT('%',
					#{search_word}, '%')
				</when>
				<when test='search_key == "all"'>
					AND(
					alarm.title LIKE CONCAT('%', #{search_word},
					'%')
					OR alarmClass.class_no LIKE CONCAT('%', #{search_word}, '%')
					)
				</when>
				<otherwise></otherwise>
			</choose>
			)
		</if>
		GROUP BY alarm.aid,alarmClass.subject
		ORDER BY alarm.reg_date DESC
		LIMIT
		#{currentPage},#{recordCnt}
	</select>

	<select id="getUserFromWX" resultType="com.digital.tch.china.vo.User"
		parameterType="com.digital.tch.china.vo.User">
		SELECT
		*
		FROM t_user
		WHERE user_id = #{user_id}and user_pw
		= #{user_pw} and scid!=0 and user_type=#{user_type}
	</select>

	<select id="getAddressBookStudentsList" resultType="com.digital.tch.china.vo.User"
		parameterType="java.util.HashMap">
		SELECT
		scid
		,student_no
		,user_id
		,user_name
		,user_email
		,sex
		,photo_path
		,school_year
		,class_no
		FROM t_user AS userInfo
		WHERE 1=1
		AND
		userInfo.is_delete ='N'
		AND
		userInfo.scid = #{scid}
		AND
		userInfo.school_year = #{school_year}
		AND
		userInfo.class_no =
		#{class_no}
	</select>

	<select id="getTeacherClassListBySubjectId" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		SELECT
		duty_school_year AS school_year
		,duty_school_class_no AS class_no
		,duty_subject AS subject_id
		FROM(
		SELECT
		tDuty.duty_school_year
		,tDuty.duty_school_class_no
		,tDuty.duty_subject
		FROM t_teacher_duty AS
		tDuty
		INNER JOIN t_user AS userInfo ON (
		userInfo.user_id =
		tDuty.user_id
		AND userInfo.user_type="T"
		AND userInfo.is_delete="N"
		AND
		userInfo.scid = #{scid}
		)
		WHERE tDuty.user_id = #{user_id}
		AND
		duty_subject = #{subject_id}
		<if test="school_year != null">
			AND duty_school_year = #{school_year}
		</if>
		GROUP BY duty_school_year, duty_school_class_no, duty_subject
		) AS
		tDuty
		ORDER BY school_year,class_no
	</select>

	<insert id="addAlarm" parameterType="java.util.HashMap"
		useGeneratedKeys="true" keyProperty="aid">
		INSERT INTO t_alarm(
		title
		,memo
		,user_id
		)VALUES(
		#{title}
		,#{memo}
		,#{user_id}
		)
	</insert>

	<insert id="addAlarmClass" parameterType="java.util.HashMap"
		useGeneratedKeys="true" keyProperty="acid">
		INSERT INTO t_alarm_class(
		aid
		,subject
		,school_year
		,class_no
		)VALUES(
		#{aid}
		,#{subject_id}
		,#{school_year}
		,#{class_no}
		)
	</insert>

	<insert id="addAlarmFile" parameterType="java.util.HashMap"
		useGeneratedKeys="true" keyProperty="afid">
		INSERT INTO t_alarm_file(
		aid
		,filename
		,filepath
		)VALUES(
		#{aid}
		,#{file_name}
		,#{file_path}
		)
	</insert>

	<insert id="addAlarmToStudents" parameterType="java.util.HashMap">
		INSERT INTO
		t_alarm_students(
		aid
		,user_id
		)VALUES(
		#{aid}
		,#{user_id}
		)
	</insert>

	<select id="getTchNoticeList" resultType="com.digital.tch.china.vo.Notice"
		parameterType="java.util.HashMap">
		SELECT
		*
		FROM(
		SELECT
		notice.nid
		,notice.scid
		,IFNULL(notice.title,"") AS title
		,IFNULL(notice.user_id,"") AS user_id
		,IFNULL(notice.target,"") AS target
		,notice.reg_date
		,IFNULL(code.code_name,"") AS speaker
		,noticeRead.nread_id
		,IF(noticeRead.user_id IS NULL ,"0","1") AS new_cnt
		,IF((SELECT
		COUNT(nid) FROM t_notice_file WHERE nid = notice.nid) > 0 ,
		"true","false") AS file_added
		FROM t_notice AS notice
		INNER JOIN
		t_notice_target as noticeTarget ON notice.nid = noticeTarget.nid
		AND
		noticeTarget.user_id=#{user_id}
		INNER JOIN t_code AS code ON
		code.code_group = '23' AND notice.speaker =
		code_id
		LEFT JOIN
		t_notice_read AS noticeRead ON (
		noticeRead.nid = notice.nid
		AND
		noticeRead.user_id = (
		SELECT
		user_id
		FROM t_user
		WHERE is_delete = 'N'
		AND scid = #{scid}
		AND user_id = #{user_id}
		)
		)
		WHERE 1=1
		AND scid =
		#{scid}

		) AS notice
		WHERE 1=1
		ORDER BY notice.reg_date DESC
		LIMIT
		#{currentPage} ,
		#{recordCnt}
	</select>

	<select id="getWxmessage" resultType="com.digital.tch.china.vo.WXMessage"
		parameterType="com.digital.tch.china.vo.WXMessage">
		SELECT * FROM t_weixin_message WHERE wxtype= #{WxType}
		AND
		LOCATE(code,#{code})>0 LIMIT 0,1;
	</select>

	<select id="getAlarmDetailByClassTeacher_receivedStudents"
		resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT
		studentInfo.user_id
		,studentInfo.user_name
		,studentInfo.student_no
		,studentInfo.photo_path
		FROM t_alarm_students AS alarmStudents
		INNER
		JOIN t_user AS studentInfo
		ON(
		alarmStudents.user_id =
		studentInfo.user_id
		AND studentInfo.is_delete = 'N'
		AND
		studentInfo.user_type = 'S'
		AND studentInfo.scid = #{scid}
		)
		WHERE
		alarmStudents.aid = #{aid}
	</select>

	<select id="getAlarmDetailByClassTeacher" resultType="java.util.HashMap"
		parameterType="java.util.HashMap">
		SELECT
		alarm.aid
		,alarm.user_id AS teahcer_id
		,alarm.title
		,alarm.reg_date
		,alarm.memo
		,alarmClass.acid
		,alarmClass.school_year AS
		target_school_year
		,alarmClass.class_no AS target_class_no
		,alarmClass.subject AS subject_id
		,userInfo.school_year
		,userInfo.class_no
		,userInfo.user_name AS teacher_name
		,IFNULL(codeInfo.code_name,"") AS subject_name
		,( SELECT
		IFNULL(CONCAT('[', GROUP_CONCAT('"',filepath,'/',filename,'"')
		,']'),"") AS alarmFile
		FROM t_alarm_file WHERE aid = alarm.aid
		) AS
		alarmFile
		FROM t_alarm AS alarm
		INNER JOIN t_user AS userInfo ON
		userInfo.user_id = alarm.user_id
		LEFT JOIN t_alarm_class as alarmClass
		ON alarmClass.aid = alarm.aid
		LEFT JOIN t_code AS codeInfo ON
		(codeInfo.code_group = '02' AND
		alarmClass.subject = codeInfo.code_id)
		WHERE 1=1
		AND alarm.aid = #{aid}
		GROUP BY alarm.aid
	</select>

	<select id="getAlarmListByClassTeacher" resultType="com.digital.tch.china.vo.Alarm"
		parameterType="java.util.HashMap">
		SELECT
		alarm.aid
		,alarm.user_id AS teacher_id
		,alarm.title
		,alarm.reg_date
		,alarmClass.acid
		,alarmClass.school_year AS
		target_school_year
		,alarmClass.class_no AS target_class_no
		,alarmClass.subject AS subject_id
		,userInfo.school_year
		,userInfo.class_no
		,userInfo.user_name AS user_name
		,IFNULL(codeInfo.code_name,"") AS subject_name
		,IF((SELECT count(afid)
		FROM t_alarm_file AS alarmFile WHERE alarmFile.aid =
		alarm.aid)>
		0,"true","false") AS isFile
		,ifnull(alarmRead.aid,0) AS
		new_cnt
		FROM
		t_alarm AS
		alarm
		INNER JOIN
		t_user AS userInfo ON
		userInfo.user_id =
		alarm.user_id
		LEFT JOIN t_alarm_class as alarmClass
		ON alarmClass.aid =
		alarm.aid
		LEFT JOIN t_code AS codeInfo ON
		(codeInfo.code_group = '02'
		AND
		alarmClass.subject = codeInfo.code_id)
		LEFT JOIN t_alarm_read AS
		alarmRead ON alarmRead.aid = alarm.aid
		AND
		alarmRead.user_id =
		#{user_id}
		WHERE 1=1
		AND alarm.is_delete = 'N'
		AND
		userInfo.scid =
		#{scid}
		AND alarmClass.school_year = #{school_year}
		AND
		alarmClass.class_no =
		#{class_no}
		ORDER BY alarm.reg_date DESC
		LIMIT
		#{currentPage},#{recordCnt}
	</select>

	
	
	
	<select id="getMyClassStudentParentsList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			userInfo.user_id
		    ,userInfo.student_no
		    ,userInfo.user_name
		    ,userInfo.photo_path
		    ,userInfo.user_index
		    ,userInfo.scid
			,(
				SELECT 
					GROUP_CONCAT(parent_type)
		        FROM t_student_parents AS parents
		        INNER JOIN t_user AS parentsInfo ON(
		        	parentsInfo.user_id = parents.parent_id
		            AND parentsInfo.is_delete ='N'
		            AND parentsInfo.user_type ='P'
		            AND parentsInfo.scid = #{scid}
		        )
		        WHERE parents.parent_status = 'Y'
		        AND parents.user_id = userInfo.user_id
		    ) AS reg_type
		FROM t_user AS userInfo
		WHERE 1=1
		AND userInfo.is_delete = 'N'
		AND userInfo.user_type = 'S'
		AND userInfo.scid = #{scid}
		AND userInfo.school_year = #{school_year}
		AND userInfo.class_no = #{class_no}
		<if test="user_name != null">
		AND userInfo.user_name like CONCAT("%",#{user_name},"%")
		</if>
		ORDER BY student_no ASC	
	</select>
	
	<insert id="addTeacherQna" parameterType="java.util.HashMap">
		<!-- 
		INSERT INTO t_parent_qa ( 
					register_id
					,student_id
					,target_id
					,school_year
					,class_no
					,teacher_type
					,target_type 
				)
	    		VALUES( 'mtbi2','ms04','mtbi2','08','02','T','D,M,E')
		 -->
		 
		INSERT INTO t_parent_qa(
			register_id
			,student_id
		    ,target_id
		    ,school_year
		    ,class_no
		    ,teacher_type
		    ,target_type
		)VALUES(
			#{user_id}
			,#{student_id}
			,#{student_id}
		    ,#{school_year}
		    ,#{class_no}
		    ,#{value_user_type}
		    ,#{target_type}
		)
		<selectKey resultType="String" keyProperty="pqaid" order="AFTER">
        	SELECT LAST_INSERT_ID() 
    	</selectKey>
    	        
	</insert>
	
	<insert id="addTeacherQnaComment" parameterType="java.util.HashMap">
		INSERT INTO t_parent_qa_comment(
			pqaid
    		,user_id
    		,comment
    		,reg_type
		)VALUES(
			#{pqaid}
    		,#{user_id}
    		,#{comment}
    		,#{value_user_type}
		)
		<selectKey resultType="String" keyProperty="comment_id" order="AFTER">
        	SELECT LAST_INSERT_ID() 
    	</selectKey>
    	        
	</insert>
	
	
	
	

	
	<select id="getUserPersInfo" resultType="com.digital.tch.china.vo.User" parameterType="com.digital.tch.china.vo.User">
	
		SELECT *,(SELECT code_name FROM t_code WHERE code_group='31' and code_id=national) as national_name,
		(SELECT name FROM t_originate WHERE oid=originate) as originate_name,
		(SELECT code_name FROM t_code WHERE code_group='05' and code_id=teacher_position) as teacher_position_name,
		(SELECT code_name FROM t_code WHERE code_group='07' and code_id=teacher_duty) as teacher_duty_name,
		(SELECT code_name FROM t_code WHERE code_group='82' and code_id=sex) as sex_name
		FROM t_user 
		WHERE user_id = #{user_id}
    </select>
	


	<select id="getParentQaList" resultType="com.digital.tch.china.vo.ParentQa"
		parameterType="java.util.HashMap">

		SELECT
		*
		FROM(
		SELECT
		qaList.*
		,qaComment.comment AS
		last_comment
		,qaComment.user_id AS last_comment_user_id
		,qaComment.reg_type AS last_comment_reg_type
		,qaComment.reg_date AS last_comment_reg_date
		,commenterInfo.user_name
		AS last_comment_user_name
		,commenterInfo.photo_path AS
		last_comment_photo_path
		,(SELECT (COUNT(comment_id)-1) FROM
		t_parent_qa_comment WHERE pqaid =
		qaList.pqaid) AS comment_count
		,IF(qaRead.pread_id IS NULL,"true","false") AS is_new
		FROM(
		SELECT
		qa.pqaid
		,qa.student_id
		,qa.reg_date
		,qa.is_delete
		,qa.is_visible
		,qa.register_id
		,qa.target_id
		,qa.school_year
		,qa.class_no
		,qa.target_type
		,IFNULL(studentInfo.student_no,"") AS student_no
		,IFNULL(studentInfo.user_name,"") AS student_name
		,IFNULL(studentInfo.photo_path,"") AS student_photo_path
		,IFNULL(registerInfo.user_name,"") AS register_name
		,IFNULL(registerInfo.photo_path,"") AS register_photo_path
		,qaComment.comment_id
		FROM t_parent_qa AS qa
		INNER JOIN t_user As
		studentInfo ON(
		qa.student_id = studentInfo.user_id
		)
		INNER JOIN t_user
		AS registerInfo ON(
		qa.register_id = registerInfo.user_id
		)
		LEFT JOIN
		t_parent_qa_comment AS qaComment ON qaComment.comment_id= (
		SELECT
		comment_id
		FROM t_parent_qa_comment
		WHERE pqaid = qa.pqaid
		ORDER BY
		reg_date DESC LIMIT 1
		)
		WHERE 1=1
		AND qa.is_delete = 'N'
		AND
		(qa.register_id = #{user_id}
		OR qa.target_id = #{user_id}
		)
		AND
		qa.school_year = #{school_year}
		AND qa.class_no = #{class_no}
		) AS
		qaList
		LEFT JOIN t_parent_qa_comment AS
		qaComment ON
		qaComment.comment_id = qaList.comment_id
		LEFT JOIN t_user
		AS
		commenterInfo ON commenterInfo.user_id = qaComment.user_id
		LEFT JOIN
		t_parent_qa_read AS qaRead ON qaRead.pqaid = qaList.pqaid AND
		qaRead.user_id = #{user_id}
		) AS qnaList
		WHERE 1=1
		ORDER BY
		qnaList.last_comment_reg_date DESC
		LIMIT
		#{currentPage},#{recordCnt}
	</select>

    <select id="getQnaDetailInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			qa.pqaid
			,qa.school_year
			,qa.class_no
			,qa.student_id
			,qa.target_type
			,studentInfo.student_no
			,studentInfo.user_name AS student_name
			,studentInfo.photo_path AS student_photo_path
			FROM t_parent_qa AS qa
		INNER JOIN t_user AS studentInfo ON (
			studentInfo.user_id = qa.student_id
		    AND studentInfo.is_delete = 'N'
		    AND studentInfo.user_type = 'S'
		    AND studentInfo.scid = #{scid}
		)
		WHERE pqaid = #{pqaid}
		LIMIT 1
	</select>
	
	<select id="getQnaCommentList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT
			qaComment.comment_id
			,qaComment.pqaid
			,qaComment.user_id AS comment_user_id 
			,qaComment.comment
			,qaComment.reg_date
			,qaComment.reg_type
			,commenterInfo.user_name AS comment_user_name
			,commenterInfo.photo_path As comment_user_photo_path
		FROM t_parent_qa_comment AS qaComment
		INNER JOIN t_parent_qa As qa ON qa.pqaid = qaComment.pqaid
		INNER JOIN t_user AS commenterInfo ON (
			commenterInfo.user_id = qaComment.user_id
		    AND commenterInfo.is_delete = 'N'
		    AND commenterInfo.scid = #{scid}
		)
		WHERE qaComment.pqaid = #{pqaid}
	    ORDER BY qaComment.reg_date ASC 
	</select>
	
	<insert id="updateTeacherReadState"  useGeneratedKeys="true" keyProperty="pread_id">
	INSERT INTO t_parent_qa_read(pqaid,user_id)
        	SELECT #{pqaid},#{user_id} FROM DUAL
        WHERE NOT EXISTS(
        	SELECT * FROM t_parent_qa_read
            WHERE pqaid = #{pqaid}
            AND user_id = #{user_id}
        )
	</insert>
	
	<delete id="deleteParentQaComment" parameterType="java.util.HashMap">
		DELETE FROM t_parent_qa_comment 
		WHERE comment_id = #{comment_id}
	</delete>
	
	<insert id="insertParentQaComment" parameterType="java.util.HashMap">
		INSERT INTO t_parent_qa_comment(
			pqaid
			,user_id
			,comment
			,reg_type
		)VALUES(
			#{pqaid}
			,#{user_id}
			,#{comment}
			,#{reg_type}
		)
	</insert>
	
	<insert id="updatePw" parameterType="com.digital.tch.china.vo.User" >
	    UPDATE t_user SET
			user_pw=#{user_pw}			
		WHERE	user_id = #{user_id}
	</insert>

	
	<update id="updateTeacher" parameterType="com.digital.tch.china.vo.User" >
	    UPDATE t_user SET
			address=#{address},phone=#{phone},user_email=#{user_email},sns=#{sns}
		WHERE	user_id = #{user_id}
	</update>
	<select id="getTeacherSubject" resultType="java.util.HashMap"
		parameterType="java.util.HashMap">
		SELECT code_name 
		AS subject_name,
		duty_school_year 
		AS school_year,
		duty_school_class_no 
		AS class_no
		FROM t_code c JOIN t_teacher_duty t ON
		c.code_id=t.duty_subject 
		JOIN t_user u ON 
		(t.user_id=u.user_id AND
		u.teacher_charge='Y')
		WHERE code_group='02' 
		AND c.code_id=t.duty_subject 
		AND t.user_id=#{user_id}
	</select>
</mapper>