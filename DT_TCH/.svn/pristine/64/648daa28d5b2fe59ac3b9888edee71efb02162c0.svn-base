//家长问答详细
$(function() {
	tchSubTempFrame.qnaView = {};
	tchSubTempFrame.qnaView.wrapper = $('#wrapper');

	// init
	tchSubTempFrame.qnaView.init = function() {
		
		tchSubTempFrame.qnaView.viewInfoInit();

		// tchSubTempFrame.qnaView.wrapper.attr('data-color' ,
		// localStorage.getObject('parentInfo').parent_type);
		$('#wrapper').show();

		setTimeout(function() {
			$('#wrapper').find('.intro').fadeOut(function() {
				showMain(tchSubTempFrame.qnaView);
			});
		}, 1500);
		
	}

	// 详细信息
	tchSubTempFrame.qnaView.viewInfoInit = function() {
		tchSubTempFrame.qnaView.editInputController('init');

		var params = {
			pqaid : cts_getParameter('pqaid'),
			scid : cts_getParameter('scid'),
			user_id : localStorage.getItem('TCH_id')
		}

		getAjaxPostData(
				"tch/getQnaDetail.do?",
				params,
				true,
				function(data) {
					console.info('问答列表 : ', data.resultData);

					if (data.resultcode == '0000') {
						tchSubTempFrame.qnaView.wrapper.find('.reply').empty();

						for (var i = 0; i < data.resultData.commentList.length; i++) {
							var commentDom = '';

							writter = '';

							// 父亲
							if (data.resultData.commentList[i].reg_type == 'D') {
								writter = '父亲: '
										+ resultData.commentList[i].comment_user_name;
							} else if (data.resultData.commentList[i].reg_type == 'M') {
								// 母亲
								writter = '母亲: '
										+ data.resultData.commentList[i].comment_user_name;
							} else if (data.resultData.commentList[i].reg_type == 'E') {
								// 监护人
								writter = '监护人: '
										+ data.resultData.commentList[i].comment_user_name;
							} else if (data.resultData.commentList[i].reg_type == 'T') {
								// 班主任
								writter = '班主任'
										+ data.resultData.commentList[i].comment_user_name;
							} else if (data.resultData.commentList[i].reg_type == 'S') {
								// 校长
								writter = '校长'
										+ data.resultData.commentList[i].comment_user_name;
							}

							commentDom += '<li data-user="'
									+ data.resultData.commentList[i].comment_user_id
									+ '">';
							commentDom += '	<span class="thum">';
							commentDom += '		<img src="'
									+ (((data.resultData.commentList[i].comment_user_photo_path == "") || (data.resultData.commentList[i].comment_user_photo_path === null)) ? '../'
											+ defaultProfileImgPath
											: lmsUrl
													+ data.resultData.commentList[i].comment_user_photo_path)
									+ '" alt="">';
							commentDom += '	</span>';

							commentDom += '	<div class="list-cnt" >';

							// 删除我写的最后一条评论
							if ((data.resultData.commentList[i].reg_type == localStorage
									.getItem('TCH_user_type'))) {
								commentDom += '	<div class="option">';
								commentDom += ' <a href="javascript:void(0)" class="btn_view_delete" data-cid="'
										+ data.resultData.commentList[i].comment_id
										+ '" data-kor="삭제">取消回复</a>';
								commentDom += '	</div>';
							}

							commentDom += '		<h4 style="margin-top:0px;margin-bottom:0px">'
									+ writter + '</h4>';
							commentDom += '		<em class="date">'
									+ data.resultData.commentList[i].reg_date_format
									+ '</em><br>';

							/**
							 * // 관계표시 var targetType =
							 * data.result[i].target_type || "";
							 * 
							 * if(targetType != ""){ targetType =
							 * targetType.replaceAll('D','父亲'); // 아빠 targetType =
							 * targetType.replaceAll('M','母亲'); // 엄마 targetType =
							 * targetType.replaceAll('E','监护人'); // 보호인
							 * 
							 * 
							 * target_type_arr = cts_split(targetType,',');
							 * 
							 * commentDom += '<span>'; for(var k=0; k <
							 * target_type_arr.length; k++){ commentDom +=
							 * '['+target_type_arr[k]+']'; } commentDom += '</span>'; }
							 */

							commentDom += '<p>';
							commentDom += data.resultData.commentList[i].comment;
							commentDom += '</p>';
							commentDom += '	</div>';

							commentDom += '</li>';

							// 拼接html
							tchSubTempFrame.qnaView.wrapper.find('.reply')
									.append(commentDom);

							// 나의 코멘트 중 맨 마지막 코멘트의 수정/삭제 버튼만 남기고 삭제
							if ($('.option').length > 1) {
								$(
										'.option:not(:eq('
												+ ($('.option').length - 1)
												+ '))').remove();
							}
						}

						tchSubTempFrame.qnaView.wrapper
								.find('#qnaAdapter')
								.append(
										':['
												+ data.resultData.qnaInfo.student_name
												+ ']的家长');

						// 맨 마지막 댓글이 내가 아니면 수정/삭제 숨김
						if ($('.reply li:last').data('user') != localStorage
								.getItem('TCH_id')) {
							$('.option').hide();
						}
					} else {
						// 处理失败提示
						commonAlert('处理失败', false, null, null);
						return;
					}
				});
	}

	// 事件绑定
	tchSubTempFrame.qnaView.eventBind = function() {

		/**
		 * // 修改 tchSubTempFrame.qnaView.wrapper.on(BIND_EVENT_TYPE,
		 * '.btn_view_edit' ,function(){
		 * tchSubTempFrame.qnaView.editInputController('show',
		 * $(this).parent().parent().find('p').text());
		 * $('#btnQaViewSend').data('type','update');
		 * $('#btnQaViewSend').data('cid', $(this).data('cid')); });
		 */

		/**
		 * // 发送按钮事件 tchSubTempFrame.qnaView.wrapper.on(BIND_EVENT_TYPE,
		 * '#btnQaViewSend' ,function(){ var $this = $(this);
		 * 
		 * if($('textarea[name=qna_view_update_input]').val() == ''){ // 텍스트 없음
		 * commonAlert('请输入内容。', false , null, null); return; } // 이모티콘 체크
		 * emojiCheck(textAreaInputChk(tchSubTempFrame.qnaView.wrapper.find('textarea[name=qna_view_update_input]').val()) ,
		 * function(){ if($this.data('type') == 'update'){ // 글 수정 var params = {
		 * comment_id : $this.data('cid'), comment :
		 * $('textarea[name=qna_view_update_input]').val() }
		 * 
		 * getAjaxPostData("updateParentQaComment.do?", params, true,
		 * function(data){
		 * 
		 * 
		 * if((data.resultcode == '0000')){ // 리스트 갱신
		 * tchSubTempFrame.qnaView.viewInfoInit(); }else{ // 처리실패 //처리에 실패하였습니다.
		 * commonAlert('处理失败', false , null, null); } }); }else{ // 재문의 var
		 * params = { user_id : localStorage.getItem('MOMS_id'), comment :
		 * $('textarea[name=qna_view_update_input]').val(), pqaid :
		 * cts_getParameter('pqaid'), reg_type :
		 * localStorage.getObject('parentInfo').parent_type }
		 * 
		 * getAjaxPostData("insertParentQaComment.do?", params, true,
		 * function(data){
		 * 
		 * 
		 * if((data.resultcode == '0000') && (data.result == 1)){ // 리스트 갱신
		 * tchSubTempFrame.qnaView.viewInfoInit(); }else{ //처리에 실패하였습니다.
		 * commonAlert('处理失败', false , null, null); return; } }); } }); }); //
		 * 取消按钮事件 tchSubTempFrame.qnaView.wrapper.on(BIND_EVENT_TYPE,
		 * '#btnQaViewCancel' ,function(){
		 * tchSubTempFrame.qnaView.editInputController('init'); });
		 * 
		 * 
		 */

		// 删除按钮事件
		tchSubTempFrame.qnaView.wrapper
				.on(
						BIND_EVENT_TYPE,
						'.btn_view_delete',
						function() {
							var $this = $(this);
							// 삭제하시겠습니까?
							commonAlert(
									'请确认是否删除该条回复？',
									true,
									function() {
										var params = {
											comment_id : $this.data('cid')
										}

										getAjaxPostData(
												"tch/deleteParentQaComment.do?",
												params,
												true,
												function(data) {

													if ((data.resultcode == '0000')) {
														if ($('.reply-wrap')
																.children().length == 1) {
															tchSubTempFrame.qnaView
															.viewInfoInit();
														} else {
															// 리스트 갱신
															tchSubTempFrame.qnaView
																	.viewInfoInit();
														}
													} else {
														// 처리에 실패하였습니다.
														commonAlert('处理失败',
																false, null,
																null);
													}
												});
									}, null);
						});

		// 再次提问发送按钮事件
		tchSubTempFrame.qnaView.wrapper.on(BIND_EVENT_TYPE, '#btnQaViewSend',
				function() {
					var $this = $(this);

					if ($('textarea[name=qna_view_update_input]').val() == '') {
						// 텍스트 없음
						commonAlert('请输入内容', false, null, null);
						return;
					}

					// 参数
					var params = {
						scid : cts_getParameter('scid'),
						user_id : localStorage.getItem('TCH_id'),
						comment : $('textarea[name=qna_view_update_input]')
								.val(),
						pqaid : cts_getParameter('pqaid'),
						reg_type : localStorage.getItem('TCH_user_type')
					}

					getAjaxPostData("tch/insertParentQaComment.do?", params,
							true, function(data) {
								debugger;
								if ((data.resultcode == '0000')
										&& (data.resultData == 1)) {
									// 刷新页面
									tchSubTempFrame.qnaView.viewInfoInit();
									$('#qna_txt_input').val('');
								} else {
									// 错误提示
									commonAlert('处理失败', false, null, null);
									return;
								}
							});
				});

		// 再次提问按钮事件
		tchSubTempFrame.qnaView.wrapper.find('#btn-new-send').on(
				BIND_EVENT_TYPE, function() {
					// 입력폼 보이기
					tchSubTempFrame.qnaView.editInputController('show', '');
					$('#btnQaViewSend').data('type', 'reply');
				});
	}

	// 输入框
	tchSubTempFrame.qnaView.editInputController = function(type, value) {
		if (type == "show") {
			// 수정폼 보여지기
			$('.qna .qna_write').show();
			$('.qna .group-btn').show();

			// 텍스트 세팅
			$('textarea[name=qna_view_update_input]').val(value);

			scrollTopBottom('bottom');
		} else {
			// 수정폼 숨기기
			$('.qna .qna_write').hide();
			$('.qna .group-btn').hide();

			// 텍스트 초기화
			$('textarea[name=qna_view_update_input]').text('');
		}
	}

	tchSubTempFrame.qnaView.init();
});