$(function() {
	currentPage = 1; // 当前页
	var params;

	tchSubTempFrame.notice.wrapper = $('.m_notice');
	tchSubTempFrame.notice.sFlag = false;

	// init
	tchSubTempFrame.notice.init = function() {

		currentPage = 1;

		// 获取微信用户信息信息
		// 获取 授权 回调 code
		var wmcode = GetQueryString("code");

		// 获取 用户 useid
		var params = {
			code : wmcode
		};

		// 获取 微信userinfo
		getAjaxPostData(
				'getWXUserInfo.do?',
				params,
				true,
				function(data) {
					var response = data;
					if (response.resultcode == '0000'
							&& typeof (response.result) == "object") {
						// 获取用户微信信息和用户信息
						localStorage.setItem('TCH_wx_user_id',
								response.result.wx_user_id); // 用户微信ID
						localStorage.setItem('TCH_device_id',
								response.result.device_id); // 手机设备ID
						if (response.result.user_id != null) {
							if (response.result.scid == null) {
								commonAlert('用户信息数据出现异常。', false, null, null);
								return;
							}
							localStorage.setItem('TCH_id',
									response.result.user_id);// 用户ID
							localStorage.setItem('TCH_scid',
									response.result.scid);// 学校ID

							// TODO:自动登录
							localStorage.setObject('s_defaultInfo',
									response.result);
							sessionStorage['TCH_id'] = response.result.user_id;
							console.debug("注册资料和信息", data);

							// 在每个级别设置科目
							setMomsSubjectObj(function() {
								// 本地存储 在每个级别存储的Obj科目
								localStorage.setObject('momsSubjectObj',
										momsSubjectObj);
							});

							var user_type = localStorage.getItem('TCH_user_type');
							if (user_type == "T") {
								params = {
									scid : localStorage.getItem('TCH_scid'),
									user_id : localStorage.getItem('TCH_id'),
									target : "A",
									currentPage : currentPage
								};
								Controller = "getTchNoticeList.do?";
							}

							if (user_type == "P" || user_type == "S") {
								params = {
									type : "notice",
									user_id : localStorage.getItem('TCH_id'),
									currentPage : currentPage
								}
								Controller = "getNoticeList.do?";
							}

							tchSubTempFrame.notice.eventBind();
							tchSubTempFrame.notice.listInit();

							// pull to refresh
							$('#container').xpull({
								'callback' : function() {
									tchSubTempFrame.notice.sFlag = false;
									tchSubTempFrame.notice.listInit();
								}
							});
						} else {
							commonAlert(
									'您还没有进行授权登录！<br>关闭此画面，在<strong>[更多]</strong>-<strong>[授权登录]</strong>进行授权。',
									false, null, null);
						}
					}
				});
	}

	// event bind
	tchSubTempFrame.notice.eventBind = function() {
		// item click
		tchSubTempFrame.notice.wrapper
				.off(BIND_EVENT_TYPE, '.notice_list .cnt');
		tchSubTempFrame.notice.wrapper
				.on(
						BIND_EVENT_TYPE,
						'.notice_list .cnt',
						function() {
							var $this = $(this);

							// 未读过的帖子
							if ($this.find('h4 .new').length != 0) {
								// 읽음 api로 전송

								var params = {
									type : $this.attr('data-type'),
									key : $this.attr('data-key'),
									user_id : localStorage.getItem('TCH_id')
								}

								getAjaxPostData(
										"insertRead.do?",
										params,
										false,
										function(data) {
											if (data.resultcode == '0000') {
												// NEW 아이콘 삭제
												$this.find('h4 .new').remove();

												location.href = "../weixin/notice_view.html?key="
														+ $this
																.attr('data-key');
											} else {
												console.log('insertRead 오류');
												return;
											}
										});
							} else {
								// 已读帖子
								location.href = "../weixin/notice_view.html?key="
										+ $this.attr('data-key');
							}

							// 상세내용 세팅
							/*
							 * momsSubTempFrame.noticeAlarm.detailListView(($this.index()/2),
							 * function(){ // 스크롤 이동 setTimeout(function(){ try{
							 * if($(this).data('type') == 'N'){
							 * momsSubTempFrame.noticeAlarm.wrapper.find('.noticeBody[data-num='+$this.attr("data-num")+']
							 * pt').get(0).scrollIntoViewIfNeeded(); }else{
							 * momsSubTempFrame.noticeAlarm.wrapper.find('.noticeBody[data-num='+$this.attr("data-num")+']').get(0).scrollIntoViewIfNeeded(); }
							 * }catch(e){ console.log("scroll error!!!!"); }
							 * },300); });
							 */
						});

	}

	// 初始化列表
	tchSubTempFrame.notice.listInit = function() {
		// 获取通知公告列表数据
		getAjaxPostData(
				Controller,
				params,
				true,
				function(data) {
					if (data.resultcode == '0000') {
						tchSubTempFrame.notice.wrapper.find('.notice_list')
								.empty();// 删除元素中的内容

						// 判断数据为空
						if (data.result.length == 0) {
							$('.notice_list').addClass('resultNone').append(
									'<dd>没有检索结果。</dd>');
							return false;
						} else {
							for (var i = 0; i < data.result.length; i++) {
								var listDom = "", reg_date = cts_split(
										(data.result[i].reg_date), ' '), m_days = reg_date
										.toString().substring(8, 10), m_month = reg_date
										.toString().substring(5, 7), display_date = (data.result[i].reg_date)
										.toString().substring(0, 16);

								listDom += '<dd>';
								listDom += '	<mark>';// 突出标签

								// 判断是否是今天 做强调
								if (reg_date == momsToday) {
									listDom += '		<em class="date" data-kor="今天">今天</em>';
								} else {
									// 오늘 아닌 리스트
									if (tchSubTempFrame.notice.wrapper.find(
											'.notice_list').find(
											'dd:last .date').text() != m_days) {
										listDom += '		<em class="date">'
												+ m_days + '</em>';
										listDom += '		<em class="month">'
												+ m_month + '月</em>';
									} else {
										listDom += '		<em class="date" style="display:none;">'
												+ m_days + '</em>';
										listDom += '		<em class="month" style="display:none;">'
												+ m_month + '月</em>';
									}
								}

								listDom += '	</mark>';
								listDom += '	<div class="cnt" data-type="N" data-key="'
										+ data.result[i].nid + '">';
								listDom += '		<h4><span class="na_txt cts_ellipsis">'
										+ data.result[i].title
										+ '</span>'
										+ ((data.result[i].new_cnt == 0) ? "<nn class='new'></nn>"
												: "")
										+ ''
										+ ((data.result[i].fileList && data.result[i].fileList.length > 0) ? "<ff class='file'></ff>"
												: "") + '</h4>';
								listDom += '		<span class="teacher">['
										+ data.result[i].speaker + ']</span>';
								listDom += '		<em class="write-date">'
										+ display_date + '</em>';
								listDom += '	</div>';
								listDom += '</dd>';

								tchSubTempFrame.notice.wrapper.find(
										'.notice_list').append(listDom);
							}
						}
					} else {
						commonAlert('<strong>目录信息</strong><br />连接失败。', false,
								null, null); // <strong>리스트정보</strong>를<br />
						return;
					}
				});
	}

	// list append
	tchSubTempFrame.notice.listAppend = function() {
		if (!tchSubTempFrame.notice.sFlag) {
			currentPage++;

			params.currentPage = currentPage;

			getAjaxPostData(
					Controller,
					params,
					true,
					function(data) {
						if (data.resultcode == '0000') {
							if (data.result.length != 0) {
								var numCount = tchSubTempFrame.notice.wrapper.find('.notice_list dd').length; // append
								for (var i = 0; i < data.result.length; i++) {
									var listDom = "", 
									reg_date = cts_split((data.result[i].reg_date), ' '), 
									m_days = reg_date.toString().substring(8, 10), 
									m_month = reg_date.toString().substring(5, 7), 
									display_date = (data.result[i].reg_date).toString().substring(0, 16);

									listDom += '<dd>';
									listDom += '	<mark>';

									// 判断是否是今天 做强调
									if (reg_date == momsToday) {
										listDom += '		<em class="date" data-kor="今天">今天</em>';
									} else {
										// 오늘 아닌 리스트
										if (tchSubTempFrame.notice.wrapper
												.find('.notice_list').find(
														'dd:last .date').text() != m_days) {
											listDom += '		<em class="date">'
													+ m_days + '</em>';
											listDom += '		<em class="month">'
													+ m_month + '月</em>';
										} else {
											listDom += '		<em class="date" style="display:none;">'
													+ m_days + '</em>';
											listDom += '		<em class="month" style="display:none;">'
													+ m_month + '月</em>';
										}
									}

									listDom += '	</mark>';

									listDom += '	<div class="cnt" data-type="N" data-key="'
											+ data.result[i].nid + '">';
									listDom += '		<h4><span class="na_txt cts_ellipsis">'
											+ data.result[i].title
											+ '</span>'
											+ ((data.result[i].new_cnt == 0) ? "<nn class='new'></nn>"
													: "")
											+ ''
											+ ((data.result[i].fileList && data.result[i].fileList.length > 0) ? "<ff class='file'></ff>"
													: "") + '</h4>';
									listDom += '		<span class="teacher">['
											+ data.result[i].speaker
											+ ']</span>';
									listDom += '		<em class="write-date">'
											+ display_date + '</em>';
									listDom += '	</div>';
									listDom += '</dd>';

									tchSubTempFrame.notice.wrapper.find(
											'.notice_list').append(listDom);
								}
							} else {
								tchSubTempFrame.notice.sFlag = true;
							}
						} else {
							commonAlert('<strong>目录信息</strong><br />连接失败。',
									false, null, null); // <strong>리스트정보</strong>를<br
							return;
						}
					});
		} else {
			console.log('no more data');
		}
	}

	// 눌럿을때 상세내용 보여지기
	/*
	 * momsSubTempFrame.noticeAlarm.detailListView = function(idx, callback){
	 * if(!momsSubTempFrame.noticeAlarm.wrapper.find('.noticeBody:eq('+idx+')
	 * sct').hasClass('complete')){ //console.info('상세보기세팅');
	 * momsSubTempFrame.noticeAlarm.wrapper.find('.noticeBody:eq('+idx+')
	 * sct').addClass('complete').html(viewMemo(listData[idx].memo));
	 * 
	 * //파일첨부 if(listData[idx].fileList && listData[idx].fileList.length > 0){
	 * var fileListDom = $('<dd alaram-filelist=""><span>附件</span><div></div></dd>');
	 * 
	 * listData[idx].fileList.forEach(function(file){ console.debug("file" ,
	 * file); var NA_flag = (listData[idx].speaker) ? 'N' : 'A' ; var f_dom =
	 * $(' <a href="'+ (file.filepath + file.filename) +'" class="dataType"
	 * rel="'+NA_flag+'">'+file.filename+'</a>'); f_dom.click(function(e){
	 * e.preventDefault(); var url = file.filepath; if(file.filepath &&
	 * !file.filepath.match("http://")){ url = lmsUrl+file.filepath; }
	 * 
	 * if(!iosCheck()){ OpenDataUrl(file.filename , url); }else{ var filePath =
	 * ($(this).attr('rel') == 'N') ? lmsUrl + file.filepath : file.filepath;
	 * self.location.href = "opendocument" + filePath + file.filename; } });
	 * fileListDom.find("div").append(f_dom); });
	 * momsSubTempFrame.noticeAlarm.wrapper.find('.noticeBody:eq('+idx+')').append(fileListDom); }
	 * }else{ console.info('상세보기 이미세팅'); }
	 * 
	 * callback(); }
	 */

	tchSubTempFrame.notice.init();

	/* 선생님 질문 페이지로 이동 */
	/*
	 * momsSubTempFrame.noticeAlarm.wrapper.on('click', '.noticeBody .btn-faq',
	 * function() { var uid = $(this).attr('data-uid'); var subject =
	 * $(this).attr('data-subject');
	 * 
	 * $('.t_qna > a').trigger(BIND_EVENT_TYPE, ["notice" , uid , subject]); })
	 */
});
