package com.digital.tch.common.controller;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.FileSystemResource;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.digital.tch.common.property.CommonProperties;
import com.digital.tch.common.service.FileDownloadService;
import com.digital.tch.common.vo.FileInfo;

@Controller
public class CommonController {
	private final Log logger = LogFactory.getLog(this.getClass());

	@Autowired
	FileDownloadService service;

	/**
	 * 파일 업로드 바를 그리기 위한 컨트롤러 함수
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/common/uploadProgressbar.do")
	public @ResponseBody
	String getProgress(HttpServletRequest request) throws Exception {

		/*
		 * JSONObject progressMap = new JSONObject(); progressMap.put("bytesRead", bytesRead);
		 * progressMap.put("contentLength", contentLength); progressMap.put("item", item);
		 * session.setAttribute("progressMap", progressMap);
		 */

		HttpSession session = request.getSession();
		Integer cnt = (Integer) session.getAttribute("cnt");
		if (cnt == null) {
			cnt = new Integer(1);
		} else {
			cnt++;
		}
		session.setAttribute("cnt", cnt);

		JSONObject progressMap = (JSONObject) session.getAttribute("progressMap");
		if (progressMap == null) {
			// logger.debug("progressMap is null");
			progressMap = new JSONObject();
			progressMap.put("status", "0");
			progressMap.put("bytesRead", "0");
			progressMap.put("contentLength", "0");
			progressMap.put("item", "0");
			progressMap.put("percent", "0");
		} else {
			// logger.debug("progressMap is not null");
			// logger.debug("progressMap.get(bytesRead) : " + progressMap.getLong("bytesRead"));
			// logger.debug("progressMap.get(contentLength) : " +
			// progressMap.getLong("contentLength"));

			if (progressMap.getLong("bytesRead") == progressMap.getLong("contentLength")) {
				progressMap.put("status", "2");
			} else {
				progressMap.put("status", "1");
			}
		}

		// logger.debug("json string : " + progressMap);
		return progressMap.toString();
	}

	/**
	 * 파일 업로드 하기 위해 사용했던 세션 값들을 초기화 하는 작업
	 * 
	 * @param request
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "/common/clearProgressbar.do")
	public @ResponseBody
	String clearProgress(HttpServletRequest request) throws Exception {

		/*
		 * JSONObject progressMap = new JSONObject(); progressMap.put("bytesRead", bytesRead);
		 * progressMap.put("contentLength", contentLength); progressMap.put("item", item);
		 * session.setAttribute("progressMap", progressMap);
		 */

		HttpSession session = request.getSession();
		session.setAttribute("progressMap", null);

		JSONObject progressMap = new JSONObject();
		progressMap.put("job", "success");

		logger.debug("json string : " + progressMap);
		return progressMap.toString();
	}

	@RequestMapping(value = "/common/filedownload.do")
	public @ResponseBody
	File filedownload(@RequestParam(value = "idx") int idx, HttpServletResponse response) throws Exception {
		FileInfo fileinfo = service.fileDownload(idx);
		response.setHeader("Content-Disposition", "attachment;fileName=\"" + fileinfo.getOrg_file_name() + "\";");
		return fileinfo.getFile();
	}


}
